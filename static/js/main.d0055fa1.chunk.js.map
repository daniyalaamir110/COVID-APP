{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["IS_DARK","window","matchMedia","matches","getTheme","isDark","palette","type","createTheme","styles","flexBetween","display","justifyContent","alignItems","padding","dataGrid","height","flag","boxShadow","Layout","props","state","formControlProps","label","this","control","Switch","checked","onChange","e","setState","theme","CssBaseline","AppBar","color","position","Toolbar","style","Typography","variant","FormControlLabel","Container","children","Component","Item","styled","Paper","typography","body2","spacing","margin","textAlign","text","secondary","truncateData","data","filter","_","id","WorldwideHistoricalChart","loading","a","fetch","response","json","cases","recovered","deaths","labels","Object","keys","datasets","entries","fill","borderColor","LinearProgress","lineChartProps","options","animation","showLine","hover","mode","intersect","responsive","maintainAspectRatio","WorldwideStats","todayCases","todayRecovered","todayDeaths","active","critical","affectedCountries","Grid","container","item","xs","toLocaleString","CountryTable","result","sortedResult","sort","current","next","rows","map","country","columns","field","headerName","width","sortable","align","headerAlign","pageSize","rowsPerPageOptions","rowHeight","ContinentChart","continent","barThickness","backgroundColor","barChartProps","CountryStats","key","CountryHistoricalChart","timeline","CountryTracker","input","info","error","prevProps","prevState","status","countryInfo","TextField","disabled","fullWidth","required","value","target","Button","onClick","md","src","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0055fa1.chunk.js","sourcesContent":["import {\n  AppBar,\n  Button,\n  LinearProgress,\n  Container,\n  createTheme,\n  CssBaseline,\n  FormControlLabel,\n  Grid,\n  MuiThemeProvider,\n  Paper,\n  styled,\n  Switch,\n  TextField,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { Component, Fragment } from \"react\";\nimport { Bar, Line } from \"react-chartjs-2\";\n\nconst IS_DARK = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n\nconst getTheme = (isDark) => {\n  const palette = { type: isDark ? \"dark\" : \"light\" };\n  return createTheme({ palette });\n};\n\nconst styles = {\n  flexBetween: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  padding: {\n    padding: 16,\n  },\n  dataGrid: {\n    height: 112 + 32 * 10,\n  },\n  flag: {\n    height: 128,\n    boxShadow: \"rgba(3, 102, 214, 0.3) 0px 0px 0px 3px\",\n  },\n};\n\nclass Layout extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDark: IS_DARK,\n    };\n  }\n\n  render() {\n    const formControlProps = {\n      label: this.state.isDark ? \"Dark\" : \"Light\",\n      control: (\n        <Switch\n          checked={this.state.isDark}\n          onChange={(e) => {\n            this.setState({ isDark: !this.state.isDark });\n          }}\n        />\n      ),\n    };\n    return (\n      <MuiThemeProvider theme={getTheme(this.state.isDark)}>\n        <CssBaseline />\n        <AppBar color=\"primary\" position=\"static\">\n          <Toolbar style={styles.flexBetween}>\n            <Typography variant=\"h5\">COVID-19 Tracker</Typography>\n            <FormControlLabel {...formControlProps} />\n          </Toolbar>\n        </AppBar>\n        <Container style={styles.padding}>{this.props.children}</Container>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst Item = styled(Paper)(function ({ theme }) {\n  return {\n    ...theme.typography.body2,\n    padding: theme.spacing(0),\n    margin: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  };\n});\n\nfunction truncateData(data) {\n  return data.filter(function (_, id) {\n    return id % 30 === 0;\n  });\n}\n\nclass WorldwideHistoricalChart extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      data: {},\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch(\n      \"https://disease.sh/v3/covid-19/historical/all?lastdays=all\"\n    );\n    const { cases, recovered, deaths } = await response.json();\n    const labels = truncateData(Object.keys(cases));\n    const datasets = [\n      {\n        label: \"Cases\",\n        data: truncateData(Object.entries(cases)),\n        fill: false,\n        borderColor: \"#3f51b5\",\n      },\n      {\n        label: \"Recovered\",\n        data: truncateData(Object.entries(recovered)),\n        fill: false,\n        borderColor: \"#ffb142\",\n      },\n      {\n        label: \"Deaths\",\n        data: truncateData(Object.entries(deaths)),\n        fill: false,\n        borderColor: \"#f50057\",\n      },\n    ];\n    const data = { labels, datasets };\n    this.setState({ loading: false, data });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return <LinearProgress />;\n    } else {\n      const lineChartProps = {\n        data: this.state.data,\n        height: 400,\n        options: {\n          animation: true,\n          showLine: true,\n          hover: {\n            mode: \"nearest\",\n            intersect: false,\n          },\n          responsive: true,\n          maintainAspectRatio: false,\n        },\n      };\n      return <Line {...lineChartProps} />;\n    }\n  }\n}\n\nclass WorldwideStats extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      data: {},\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch(\"https://disease.sh/v3/covid-19/all\");\n    const data = await response.json();\n    this.setState({ loading: false, data });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return <LinearProgress />;\n    } else {\n      const {\n        cases,\n        todayCases,\n        recovered,\n        todayRecovered,\n        deaths,\n        todayDeaths,\n        active,\n        critical,\n        affectedCountries,\n      } = this.state.data;\n      return (\n        <Grid container spacing={4}>\n          <Grid item xs={6}>\n            <Typography variant=\"body2\">Cases</Typography>\n            <Typography variant=\"body1\">\n              {cases.toLocaleString(\"en-US\")}\n            </Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <Typography variant=\"body2\">Cases Today</Typography>\n            <Typography variant=\"body1\">\n              +{todayCases.toLocaleString(\"en-US\")}\n            </Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <Typography variant=\"body2\">Recovered</Typography>\n            <Typography variant=\"body1\">\n              {recovered.toLocaleString(\"en-US\")}\n            </Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <Typography variant=\"body2\">Recovered Today</Typography>\n            <Typography variant=\"body1\">\n              +{todayRecovered.toLocaleString(\"en-US\")}\n            </Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <Typography variant=\"body2\">Deaths</Typography>\n            <Typography variant=\"body1\">\n              {deaths.toLocaleString(\"en-US\")}\n            </Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <Typography variant=\"body2\">Died Today</Typography>\n            <Typography variant=\"body1\">\n              +{todayDeaths.toLocaleString(\"en-US\")}\n            </Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <Typography variant=\"body2\">Active</Typography>\n            <Typography variant=\"body1\">\n              {active.toLocaleString(\"en-US\")}\n            </Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <Typography variant=\"body2\">Critical</Typography>\n            <Typography variant=\"body1\">\n              {critical.toLocaleString(\"en-US\")}\n            </Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <Typography variant=\"body2\">Affected Countries</Typography>\n            <Typography variant=\"body1\">\n              {affectedCountries.toLocaleString(\"en-US\")}\n            </Typography>\n          </Grid>\n        </Grid>\n      );\n    }\n  }\n}\n\nclass CountryTable extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      data: {},\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch(\"https://disease.sh/v3/covid-19/countries\");\n    const result = await response.json();\n    const sortedResult = result.sort(function (current, next) {\n      return current.cases > next.cases ? -1 : 1;\n    });\n    const rows = sortedResult.map(function (item, id) {\n      const { country, cases } = item;\n      return { id, country, cases: cases.toLocaleString() };\n    });\n    const columns = [\n      { field: \"country\", headerName: \"COUNTRY\", width: 180, sortable: false },\n      {\n        field: \"cases\",\n        headerName: \"CASES\",\n        width: 150,\n        sortable: false,\n        align: \"right\",\n        headerAlign: \"right\",\n      },\n    ];\n    const data = { rows, columns };\n    this.setState({ loading: false, data });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return <LinearProgress />;\n    } else {\n      return (\n        <div style={styles.dataGrid}>\n          <DataGrid\n            {...this.state.data}\n            pageSize={10}\n            rowsPerPageOptions={[10]}\n            rowHeight={32}\n          />\n        </div>\n      );\n    }\n  }\n}\n\nclass ContinentChart extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      data: {},\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch(\"https://disease.sh/v3/covid-19/continents\");\n    const result = await response.json();\n    const labels = result.map(function (item) {\n      return item.continent;\n    });\n    const cases = result.map(function (item) {\n      return item.cases;\n    });\n    const recovered = result.map(function (item) {\n      return item.recovered;\n    });\n    const deaths = result.map(function (item) {\n      return item.deaths;\n    });\n    const datasets = [\n      {\n        label: \"Cases\",\n        data: Object.entries(cases),\n        fill: false,\n        barThickness: 4,\n        backgroundColor: \"#3f51b5\",\n      },\n      {\n        label: \"Recovered\",\n        data: Object.entries(recovered),\n        fill: false,\n        barThickness: 4,\n        backgroundColor: \"#ffb142\",\n      },\n      {\n        label: \"Deaths\",\n        data: Object.entries(deaths),\n        fill: false,\n        barThickness: 4,\n        backgroundColor: \"#f50057\",\n      },\n    ];\n    const data = { labels, datasets };\n    this.setState({ loading: false, data });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return <LinearProgress />;\n    } else {\n      const barChartProps = {\n        data: this.state.data,\n        height: 432,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n        },\n      };\n      return <Bar {...barChartProps} />;\n    }\n  }\n}\n\nfunction CountryStats(props) {\n  let data = {};\n  for (let key in props.data) {\n    data[key] = props.data[key].toLocaleString(\"en-US\");\n  }\n  const {\n    cases,\n    todayCases,\n    recovered,\n    todayRecovered,\n    deaths,\n    todayDeaths,\n    active,\n    critical,\n  } = data;\n  return (\n    <Grid container spacing={4}>\n      <Grid item xs={6}>\n        <Typography variant=\"body2\">Cases</Typography>\n        <Typography variant=\"body1\">{cases}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Typography variant=\"body2\">Cases Today</Typography>\n        <Typography variant=\"body1\">+{todayCases}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Typography variant=\"body2\">Recovered</Typography>\n        <Typography variant=\"body1\">{recovered}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Typography variant=\"body2\">Recovered Today</Typography>\n        <Typography variant=\"body1\">+{todayRecovered}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Typography variant=\"body2\">Deaths</Typography>\n        <Typography variant=\"body1\">{deaths}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Typography variant=\"body2\">Died Today</Typography>\n        <Typography variant=\"body1\">+{todayDeaths}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Typography variant=\"body2\">Active</Typography>\n        <Typography variant=\"body1\">{active}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Typography variant=\"body2\">Critical</Typography>\n        <Typography variant=\"body1\">{critical}</Typography>\n      </Grid>\n    </Grid>\n  );\n}\n\nclass CountryHistoricalChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      data: {},\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch(\n      `https://disease.sh/v3/covid-19/historical/${this.props.country}?lastdays=all`\n    );\n    const {\n      timeline: { cases, recovered, deaths },\n    } = await response.json();\n    const labels = truncateData(Object.keys(cases));\n    const datasets = [\n      {\n        label: \"Cases\",\n        data: truncateData(Object.entries(cases)),\n        fill: false,\n        borderColor: \"#3f51b5\",\n      },\n      {\n        label: \"Recovered\",\n        data: truncateData(Object.entries(recovered)),\n        fill: false,\n        borderColor: \"#ffb142\",\n      },\n      {\n        label: \"Deaths\",\n        data: truncateData(Object.entries(deaths)),\n        fill: false,\n        borderColor: \"#f50057\",\n      },\n    ];\n    const data = { labels, datasets };\n    this.setState({ loading: false, data });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return <LinearProgress />;\n    } else {\n      const lineChartProps = {\n        data: this.state.data,\n        height: 400,\n        options: {\n          animation: true,\n          showLine: true,\n          hover: {\n            mode: \"nearest\",\n            intersect: false,\n          },\n          responsive: true,\n          maintainAspectRatio: false,\n        },\n      };\n      return <Line {...lineChartProps} />;\n    }\n  }\n}\n\nclass CountryTracker extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      input: \"\",\n      country: \"\",\n      data: {},\n      info: {},\n      error: false,\n    };\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (!!this.state.country && prevState.country !== this.state.country) {\n      this.setState({ loading: true });\n      const response = await fetch(\n        `https://disease.sh/v3/covid-19/countries/${this.state.country}`\n      );\n      if (response.status === 200) {\n        const {\n          country,\n          continent,\n          countryInfo: { flag },\n          cases,\n          todayCases,\n          recovered,\n          todayRecovered,\n          deaths,\n          todayDeaths,\n          active,\n          critical,\n        } = await response.json();\n        const info = { country, continent, flag };\n        const data = {\n          cases,\n          todayCases,\n          recovered,\n          todayRecovered,\n          deaths,\n          todayDeaths,\n          active,\n          critical,\n        };\n        this.setState({ loading: false, error: false, info, data });\n      } else {\n        this.setState({ loading: false, error: true, info: {}, data: {} });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          <Toolbar>\n            <TextField\n              disabled={this.state.loading}\n              fullWidth\n              required\n              error={this.state.error}\n              label=\"Country\"\n              variant=\"standard\"\n              value={this.state.input}\n              onChange={(e) => this.setState({ input: e.target.value })}\n            />\n            <Button\n              disabled={this.state.loading || !this.state.input}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => this.setState({ country: this.state.input })}\n            >\n              Track\n            </Button>\n          </Toolbar>\n        </Grid>\n        {this.state.loading ? (\n          <Grid item xs={12}>\n            <LinearProgress />\n          </Grid>\n        ) : this.state.error || !this.state.country ? (\n          <Grid item xs={12}>\n            <Typography variant=\"body1\">Nothing to show</Typography>\n          </Grid>\n        ) : (\n          <Fragment>\n            <Grid item md={4} xs={12}>\n              <img style={styles.flag} src={this.state.info.flag} alt=\"Country flag\" />\n              <Typography variant=\"body1\">{this.state.info.country}</Typography>\n              <Typography variant=\"body2\">\n                {this.state.info.continent}\n              </Typography>\n              <br />\n              <CountryStats data={this.state.data} />\n            </Grid>\n            <Grid item md={8} xs={12}>\n              <CountryHistoricalChart country={this.state.country} />\n            </Grid>\n          </Fragment>\n        )}\n      </Grid>\n    );\n  }\n}\n\nfunction App() {\n  return (\n    <Layout>\n      <Typography variant=\"h4\">Worldwide Stats</Typography>\n      <Item style={styles.padding}>\n        <Grid container spacing={4}>\n          <Grid item md={8} xs={12}>\n            <WorldwideHistoricalChart />\n          </Grid>\n          <Grid item md={4} xs={12}>\n            <WorldwideStats />\n          </Grid>\n        </Grid>\n      </Item>\n      <Grid container spacing={0}>\n        <Grid item md={4} xs={12}>\n          <Typography variant=\"h4\">Countries</Typography>\n          <Item style={styles.padding}>\n            <CountryTable />\n          </Item>\n        </Grid>\n        <Grid item md={8} xs={12}>\n          <Typography variant=\"h4\">Continents</Typography>\n          <Item style={styles.padding}>\n            <ContinentChart />\n          </Item>\n        </Grid>\n      </Grid>\n      <Typography variant=\"h4\">Track Your Country</Typography>\n      <Item style={styles.padding}>\n        <CountryTracker />\n      </Item>\n      <Item style={styles.padding}>\n        <Typography variant=\"body2\">With ❣️ by Dani</Typography>\n      </Item>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}